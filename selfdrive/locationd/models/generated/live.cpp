#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6543170510918427396) {
   out_6543170510918427396[0] = 0;
   out_6543170510918427396[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6543170510918427396[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6543170510918427396[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6543170510918427396[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6543170510918427396[5] = -sin(in_vec[1]);
   out_6543170510918427396[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6543170510918427396[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6543170510918427396[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6543170510918427396[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6543170510918427396[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6543170510918427396[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6543170510918427396[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6543170510918427396[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6543170510918427396[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6543170510918427396[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6543170510918427396[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6543170510918427396[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9062015891362533785) {
   out_9062015891362533785[0] = delta_x[0] + nom_x[0];
   out_9062015891362533785[1] = delta_x[1] + nom_x[1];
   out_9062015891362533785[2] = delta_x[2] + nom_x[2];
   out_9062015891362533785[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9062015891362533785[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9062015891362533785[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9062015891362533785[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9062015891362533785[7] = delta_x[6] + nom_x[7];
   out_9062015891362533785[8] = delta_x[7] + nom_x[8];
   out_9062015891362533785[9] = delta_x[8] + nom_x[9];
   out_9062015891362533785[10] = delta_x[9] + nom_x[10];
   out_9062015891362533785[11] = delta_x[10] + nom_x[11];
   out_9062015891362533785[12] = delta_x[11] + nom_x[12];
   out_9062015891362533785[13] = delta_x[12] + nom_x[13];
   out_9062015891362533785[14] = delta_x[13] + nom_x[14];
   out_9062015891362533785[15] = delta_x[14] + nom_x[15];
   out_9062015891362533785[16] = delta_x[15] + nom_x[16];
   out_9062015891362533785[17] = delta_x[16] + nom_x[17];
   out_9062015891362533785[18] = delta_x[17] + nom_x[18];
   out_9062015891362533785[19] = delta_x[18] + nom_x[19];
   out_9062015891362533785[20] = delta_x[19] + nom_x[20];
   out_9062015891362533785[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4758141739877846608) {
   out_4758141739877846608[0] = -nom_x[0] + true_x[0];
   out_4758141739877846608[1] = -nom_x[1] + true_x[1];
   out_4758141739877846608[2] = -nom_x[2] + true_x[2];
   out_4758141739877846608[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4758141739877846608[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4758141739877846608[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4758141739877846608[6] = -nom_x[7] + true_x[7];
   out_4758141739877846608[7] = -nom_x[8] + true_x[8];
   out_4758141739877846608[8] = -nom_x[9] + true_x[9];
   out_4758141739877846608[9] = -nom_x[10] + true_x[10];
   out_4758141739877846608[10] = -nom_x[11] + true_x[11];
   out_4758141739877846608[11] = -nom_x[12] + true_x[12];
   out_4758141739877846608[12] = -nom_x[13] + true_x[13];
   out_4758141739877846608[13] = -nom_x[14] + true_x[14];
   out_4758141739877846608[14] = -nom_x[15] + true_x[15];
   out_4758141739877846608[15] = -nom_x[16] + true_x[16];
   out_4758141739877846608[16] = -nom_x[17] + true_x[17];
   out_4758141739877846608[17] = -nom_x[18] + true_x[18];
   out_4758141739877846608[18] = -nom_x[19] + true_x[19];
   out_4758141739877846608[19] = -nom_x[20] + true_x[20];
   out_4758141739877846608[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2686832696856623219) {
   out_2686832696856623219[0] = 1.0;
   out_2686832696856623219[1] = 0;
   out_2686832696856623219[2] = 0;
   out_2686832696856623219[3] = 0;
   out_2686832696856623219[4] = 0;
   out_2686832696856623219[5] = 0;
   out_2686832696856623219[6] = 0;
   out_2686832696856623219[7] = 0;
   out_2686832696856623219[8] = 0;
   out_2686832696856623219[9] = 0;
   out_2686832696856623219[10] = 0;
   out_2686832696856623219[11] = 0;
   out_2686832696856623219[12] = 0;
   out_2686832696856623219[13] = 0;
   out_2686832696856623219[14] = 0;
   out_2686832696856623219[15] = 0;
   out_2686832696856623219[16] = 0;
   out_2686832696856623219[17] = 0;
   out_2686832696856623219[18] = 0;
   out_2686832696856623219[19] = 0;
   out_2686832696856623219[20] = 0;
   out_2686832696856623219[21] = 0;
   out_2686832696856623219[22] = 1.0;
   out_2686832696856623219[23] = 0;
   out_2686832696856623219[24] = 0;
   out_2686832696856623219[25] = 0;
   out_2686832696856623219[26] = 0;
   out_2686832696856623219[27] = 0;
   out_2686832696856623219[28] = 0;
   out_2686832696856623219[29] = 0;
   out_2686832696856623219[30] = 0;
   out_2686832696856623219[31] = 0;
   out_2686832696856623219[32] = 0;
   out_2686832696856623219[33] = 0;
   out_2686832696856623219[34] = 0;
   out_2686832696856623219[35] = 0;
   out_2686832696856623219[36] = 0;
   out_2686832696856623219[37] = 0;
   out_2686832696856623219[38] = 0;
   out_2686832696856623219[39] = 0;
   out_2686832696856623219[40] = 0;
   out_2686832696856623219[41] = 0;
   out_2686832696856623219[42] = 0;
   out_2686832696856623219[43] = 0;
   out_2686832696856623219[44] = 1.0;
   out_2686832696856623219[45] = 0;
   out_2686832696856623219[46] = 0;
   out_2686832696856623219[47] = 0;
   out_2686832696856623219[48] = 0;
   out_2686832696856623219[49] = 0;
   out_2686832696856623219[50] = 0;
   out_2686832696856623219[51] = 0;
   out_2686832696856623219[52] = 0;
   out_2686832696856623219[53] = 0;
   out_2686832696856623219[54] = 0;
   out_2686832696856623219[55] = 0;
   out_2686832696856623219[56] = 0;
   out_2686832696856623219[57] = 0;
   out_2686832696856623219[58] = 0;
   out_2686832696856623219[59] = 0;
   out_2686832696856623219[60] = 0;
   out_2686832696856623219[61] = 0;
   out_2686832696856623219[62] = 0;
   out_2686832696856623219[63] = 0;
   out_2686832696856623219[64] = 0;
   out_2686832696856623219[65] = 0;
   out_2686832696856623219[66] = -0.5*state[4];
   out_2686832696856623219[67] = -0.5*state[5];
   out_2686832696856623219[68] = -0.5*state[6];
   out_2686832696856623219[69] = 0;
   out_2686832696856623219[70] = 0;
   out_2686832696856623219[71] = 0;
   out_2686832696856623219[72] = 0;
   out_2686832696856623219[73] = 0;
   out_2686832696856623219[74] = 0;
   out_2686832696856623219[75] = 0;
   out_2686832696856623219[76] = 0;
   out_2686832696856623219[77] = 0;
   out_2686832696856623219[78] = 0;
   out_2686832696856623219[79] = 0;
   out_2686832696856623219[80] = 0;
   out_2686832696856623219[81] = 0;
   out_2686832696856623219[82] = 0;
   out_2686832696856623219[83] = 0;
   out_2686832696856623219[84] = 0;
   out_2686832696856623219[85] = 0;
   out_2686832696856623219[86] = 0;
   out_2686832696856623219[87] = 0.5*state[3];
   out_2686832696856623219[88] = 0.5*state[6];
   out_2686832696856623219[89] = -0.5*state[5];
   out_2686832696856623219[90] = 0;
   out_2686832696856623219[91] = 0;
   out_2686832696856623219[92] = 0;
   out_2686832696856623219[93] = 0;
   out_2686832696856623219[94] = 0;
   out_2686832696856623219[95] = 0;
   out_2686832696856623219[96] = 0;
   out_2686832696856623219[97] = 0;
   out_2686832696856623219[98] = 0;
   out_2686832696856623219[99] = 0;
   out_2686832696856623219[100] = 0;
   out_2686832696856623219[101] = 0;
   out_2686832696856623219[102] = 0;
   out_2686832696856623219[103] = 0;
   out_2686832696856623219[104] = 0;
   out_2686832696856623219[105] = 0;
   out_2686832696856623219[106] = 0;
   out_2686832696856623219[107] = 0;
   out_2686832696856623219[108] = -0.5*state[6];
   out_2686832696856623219[109] = 0.5*state[3];
   out_2686832696856623219[110] = 0.5*state[4];
   out_2686832696856623219[111] = 0;
   out_2686832696856623219[112] = 0;
   out_2686832696856623219[113] = 0;
   out_2686832696856623219[114] = 0;
   out_2686832696856623219[115] = 0;
   out_2686832696856623219[116] = 0;
   out_2686832696856623219[117] = 0;
   out_2686832696856623219[118] = 0;
   out_2686832696856623219[119] = 0;
   out_2686832696856623219[120] = 0;
   out_2686832696856623219[121] = 0;
   out_2686832696856623219[122] = 0;
   out_2686832696856623219[123] = 0;
   out_2686832696856623219[124] = 0;
   out_2686832696856623219[125] = 0;
   out_2686832696856623219[126] = 0;
   out_2686832696856623219[127] = 0;
   out_2686832696856623219[128] = 0;
   out_2686832696856623219[129] = 0.5*state[5];
   out_2686832696856623219[130] = -0.5*state[4];
   out_2686832696856623219[131] = 0.5*state[3];
   out_2686832696856623219[132] = 0;
   out_2686832696856623219[133] = 0;
   out_2686832696856623219[134] = 0;
   out_2686832696856623219[135] = 0;
   out_2686832696856623219[136] = 0;
   out_2686832696856623219[137] = 0;
   out_2686832696856623219[138] = 0;
   out_2686832696856623219[139] = 0;
   out_2686832696856623219[140] = 0;
   out_2686832696856623219[141] = 0;
   out_2686832696856623219[142] = 0;
   out_2686832696856623219[143] = 0;
   out_2686832696856623219[144] = 0;
   out_2686832696856623219[145] = 0;
   out_2686832696856623219[146] = 0;
   out_2686832696856623219[147] = 0;
   out_2686832696856623219[148] = 0;
   out_2686832696856623219[149] = 0;
   out_2686832696856623219[150] = 0;
   out_2686832696856623219[151] = 0;
   out_2686832696856623219[152] = 0;
   out_2686832696856623219[153] = 1.0;
   out_2686832696856623219[154] = 0;
   out_2686832696856623219[155] = 0;
   out_2686832696856623219[156] = 0;
   out_2686832696856623219[157] = 0;
   out_2686832696856623219[158] = 0;
   out_2686832696856623219[159] = 0;
   out_2686832696856623219[160] = 0;
   out_2686832696856623219[161] = 0;
   out_2686832696856623219[162] = 0;
   out_2686832696856623219[163] = 0;
   out_2686832696856623219[164] = 0;
   out_2686832696856623219[165] = 0;
   out_2686832696856623219[166] = 0;
   out_2686832696856623219[167] = 0;
   out_2686832696856623219[168] = 0;
   out_2686832696856623219[169] = 0;
   out_2686832696856623219[170] = 0;
   out_2686832696856623219[171] = 0;
   out_2686832696856623219[172] = 0;
   out_2686832696856623219[173] = 0;
   out_2686832696856623219[174] = 0;
   out_2686832696856623219[175] = 1.0;
   out_2686832696856623219[176] = 0;
   out_2686832696856623219[177] = 0;
   out_2686832696856623219[178] = 0;
   out_2686832696856623219[179] = 0;
   out_2686832696856623219[180] = 0;
   out_2686832696856623219[181] = 0;
   out_2686832696856623219[182] = 0;
   out_2686832696856623219[183] = 0;
   out_2686832696856623219[184] = 0;
   out_2686832696856623219[185] = 0;
   out_2686832696856623219[186] = 0;
   out_2686832696856623219[187] = 0;
   out_2686832696856623219[188] = 0;
   out_2686832696856623219[189] = 0;
   out_2686832696856623219[190] = 0;
   out_2686832696856623219[191] = 0;
   out_2686832696856623219[192] = 0;
   out_2686832696856623219[193] = 0;
   out_2686832696856623219[194] = 0;
   out_2686832696856623219[195] = 0;
   out_2686832696856623219[196] = 0;
   out_2686832696856623219[197] = 1.0;
   out_2686832696856623219[198] = 0;
   out_2686832696856623219[199] = 0;
   out_2686832696856623219[200] = 0;
   out_2686832696856623219[201] = 0;
   out_2686832696856623219[202] = 0;
   out_2686832696856623219[203] = 0;
   out_2686832696856623219[204] = 0;
   out_2686832696856623219[205] = 0;
   out_2686832696856623219[206] = 0;
   out_2686832696856623219[207] = 0;
   out_2686832696856623219[208] = 0;
   out_2686832696856623219[209] = 0;
   out_2686832696856623219[210] = 0;
   out_2686832696856623219[211] = 0;
   out_2686832696856623219[212] = 0;
   out_2686832696856623219[213] = 0;
   out_2686832696856623219[214] = 0;
   out_2686832696856623219[215] = 0;
   out_2686832696856623219[216] = 0;
   out_2686832696856623219[217] = 0;
   out_2686832696856623219[218] = 0;
   out_2686832696856623219[219] = 1.0;
   out_2686832696856623219[220] = 0;
   out_2686832696856623219[221] = 0;
   out_2686832696856623219[222] = 0;
   out_2686832696856623219[223] = 0;
   out_2686832696856623219[224] = 0;
   out_2686832696856623219[225] = 0;
   out_2686832696856623219[226] = 0;
   out_2686832696856623219[227] = 0;
   out_2686832696856623219[228] = 0;
   out_2686832696856623219[229] = 0;
   out_2686832696856623219[230] = 0;
   out_2686832696856623219[231] = 0;
   out_2686832696856623219[232] = 0;
   out_2686832696856623219[233] = 0;
   out_2686832696856623219[234] = 0;
   out_2686832696856623219[235] = 0;
   out_2686832696856623219[236] = 0;
   out_2686832696856623219[237] = 0;
   out_2686832696856623219[238] = 0;
   out_2686832696856623219[239] = 0;
   out_2686832696856623219[240] = 0;
   out_2686832696856623219[241] = 1.0;
   out_2686832696856623219[242] = 0;
   out_2686832696856623219[243] = 0;
   out_2686832696856623219[244] = 0;
   out_2686832696856623219[245] = 0;
   out_2686832696856623219[246] = 0;
   out_2686832696856623219[247] = 0;
   out_2686832696856623219[248] = 0;
   out_2686832696856623219[249] = 0;
   out_2686832696856623219[250] = 0;
   out_2686832696856623219[251] = 0;
   out_2686832696856623219[252] = 0;
   out_2686832696856623219[253] = 0;
   out_2686832696856623219[254] = 0;
   out_2686832696856623219[255] = 0;
   out_2686832696856623219[256] = 0;
   out_2686832696856623219[257] = 0;
   out_2686832696856623219[258] = 0;
   out_2686832696856623219[259] = 0;
   out_2686832696856623219[260] = 0;
   out_2686832696856623219[261] = 0;
   out_2686832696856623219[262] = 0;
   out_2686832696856623219[263] = 1.0;
   out_2686832696856623219[264] = 0;
   out_2686832696856623219[265] = 0;
   out_2686832696856623219[266] = 0;
   out_2686832696856623219[267] = 0;
   out_2686832696856623219[268] = 0;
   out_2686832696856623219[269] = 0;
   out_2686832696856623219[270] = 0;
   out_2686832696856623219[271] = 0;
   out_2686832696856623219[272] = 0;
   out_2686832696856623219[273] = 0;
   out_2686832696856623219[274] = 0;
   out_2686832696856623219[275] = 0;
   out_2686832696856623219[276] = 0;
   out_2686832696856623219[277] = 0;
   out_2686832696856623219[278] = 0;
   out_2686832696856623219[279] = 0;
   out_2686832696856623219[280] = 0;
   out_2686832696856623219[281] = 0;
   out_2686832696856623219[282] = 0;
   out_2686832696856623219[283] = 0;
   out_2686832696856623219[284] = 0;
   out_2686832696856623219[285] = 1.0;
   out_2686832696856623219[286] = 0;
   out_2686832696856623219[287] = 0;
   out_2686832696856623219[288] = 0;
   out_2686832696856623219[289] = 0;
   out_2686832696856623219[290] = 0;
   out_2686832696856623219[291] = 0;
   out_2686832696856623219[292] = 0;
   out_2686832696856623219[293] = 0;
   out_2686832696856623219[294] = 0;
   out_2686832696856623219[295] = 0;
   out_2686832696856623219[296] = 0;
   out_2686832696856623219[297] = 0;
   out_2686832696856623219[298] = 0;
   out_2686832696856623219[299] = 0;
   out_2686832696856623219[300] = 0;
   out_2686832696856623219[301] = 0;
   out_2686832696856623219[302] = 0;
   out_2686832696856623219[303] = 0;
   out_2686832696856623219[304] = 0;
   out_2686832696856623219[305] = 0;
   out_2686832696856623219[306] = 0;
   out_2686832696856623219[307] = 1.0;
   out_2686832696856623219[308] = 0;
   out_2686832696856623219[309] = 0;
   out_2686832696856623219[310] = 0;
   out_2686832696856623219[311] = 0;
   out_2686832696856623219[312] = 0;
   out_2686832696856623219[313] = 0;
   out_2686832696856623219[314] = 0;
   out_2686832696856623219[315] = 0;
   out_2686832696856623219[316] = 0;
   out_2686832696856623219[317] = 0;
   out_2686832696856623219[318] = 0;
   out_2686832696856623219[319] = 0;
   out_2686832696856623219[320] = 0;
   out_2686832696856623219[321] = 0;
   out_2686832696856623219[322] = 0;
   out_2686832696856623219[323] = 0;
   out_2686832696856623219[324] = 0;
   out_2686832696856623219[325] = 0;
   out_2686832696856623219[326] = 0;
   out_2686832696856623219[327] = 0;
   out_2686832696856623219[328] = 0;
   out_2686832696856623219[329] = 1.0;
   out_2686832696856623219[330] = 0;
   out_2686832696856623219[331] = 0;
   out_2686832696856623219[332] = 0;
   out_2686832696856623219[333] = 0;
   out_2686832696856623219[334] = 0;
   out_2686832696856623219[335] = 0;
   out_2686832696856623219[336] = 0;
   out_2686832696856623219[337] = 0;
   out_2686832696856623219[338] = 0;
   out_2686832696856623219[339] = 0;
   out_2686832696856623219[340] = 0;
   out_2686832696856623219[341] = 0;
   out_2686832696856623219[342] = 0;
   out_2686832696856623219[343] = 0;
   out_2686832696856623219[344] = 0;
   out_2686832696856623219[345] = 0;
   out_2686832696856623219[346] = 0;
   out_2686832696856623219[347] = 0;
   out_2686832696856623219[348] = 0;
   out_2686832696856623219[349] = 0;
   out_2686832696856623219[350] = 0;
   out_2686832696856623219[351] = 1.0;
   out_2686832696856623219[352] = 0;
   out_2686832696856623219[353] = 0;
   out_2686832696856623219[354] = 0;
   out_2686832696856623219[355] = 0;
   out_2686832696856623219[356] = 0;
   out_2686832696856623219[357] = 0;
   out_2686832696856623219[358] = 0;
   out_2686832696856623219[359] = 0;
   out_2686832696856623219[360] = 0;
   out_2686832696856623219[361] = 0;
   out_2686832696856623219[362] = 0;
   out_2686832696856623219[363] = 0;
   out_2686832696856623219[364] = 0;
   out_2686832696856623219[365] = 0;
   out_2686832696856623219[366] = 0;
   out_2686832696856623219[367] = 0;
   out_2686832696856623219[368] = 0;
   out_2686832696856623219[369] = 0;
   out_2686832696856623219[370] = 0;
   out_2686832696856623219[371] = 0;
   out_2686832696856623219[372] = 0;
   out_2686832696856623219[373] = 1.0;
   out_2686832696856623219[374] = 0;
   out_2686832696856623219[375] = 0;
   out_2686832696856623219[376] = 0;
   out_2686832696856623219[377] = 0;
   out_2686832696856623219[378] = 0;
   out_2686832696856623219[379] = 0;
   out_2686832696856623219[380] = 0;
   out_2686832696856623219[381] = 0;
   out_2686832696856623219[382] = 0;
   out_2686832696856623219[383] = 0;
   out_2686832696856623219[384] = 0;
   out_2686832696856623219[385] = 0;
   out_2686832696856623219[386] = 0;
   out_2686832696856623219[387] = 0;
   out_2686832696856623219[388] = 0;
   out_2686832696856623219[389] = 0;
   out_2686832696856623219[390] = 0;
   out_2686832696856623219[391] = 0;
   out_2686832696856623219[392] = 0;
   out_2686832696856623219[393] = 0;
   out_2686832696856623219[394] = 0;
   out_2686832696856623219[395] = 1.0;
   out_2686832696856623219[396] = 0;
   out_2686832696856623219[397] = 0;
   out_2686832696856623219[398] = 0;
   out_2686832696856623219[399] = 0;
   out_2686832696856623219[400] = 0;
   out_2686832696856623219[401] = 0;
   out_2686832696856623219[402] = 0;
   out_2686832696856623219[403] = 0;
   out_2686832696856623219[404] = 0;
   out_2686832696856623219[405] = 0;
   out_2686832696856623219[406] = 0;
   out_2686832696856623219[407] = 0;
   out_2686832696856623219[408] = 0;
   out_2686832696856623219[409] = 0;
   out_2686832696856623219[410] = 0;
   out_2686832696856623219[411] = 0;
   out_2686832696856623219[412] = 0;
   out_2686832696856623219[413] = 0;
   out_2686832696856623219[414] = 0;
   out_2686832696856623219[415] = 0;
   out_2686832696856623219[416] = 0;
   out_2686832696856623219[417] = 1.0;
   out_2686832696856623219[418] = 0;
   out_2686832696856623219[419] = 0;
   out_2686832696856623219[420] = 0;
   out_2686832696856623219[421] = 0;
   out_2686832696856623219[422] = 0;
   out_2686832696856623219[423] = 0;
   out_2686832696856623219[424] = 0;
   out_2686832696856623219[425] = 0;
   out_2686832696856623219[426] = 0;
   out_2686832696856623219[427] = 0;
   out_2686832696856623219[428] = 0;
   out_2686832696856623219[429] = 0;
   out_2686832696856623219[430] = 0;
   out_2686832696856623219[431] = 0;
   out_2686832696856623219[432] = 0;
   out_2686832696856623219[433] = 0;
   out_2686832696856623219[434] = 0;
   out_2686832696856623219[435] = 0;
   out_2686832696856623219[436] = 0;
   out_2686832696856623219[437] = 0;
   out_2686832696856623219[438] = 0;
   out_2686832696856623219[439] = 1.0;
   out_2686832696856623219[440] = 0;
   out_2686832696856623219[441] = 0;
   out_2686832696856623219[442] = 0;
   out_2686832696856623219[443] = 0;
   out_2686832696856623219[444] = 0;
   out_2686832696856623219[445] = 0;
   out_2686832696856623219[446] = 0;
   out_2686832696856623219[447] = 0;
   out_2686832696856623219[448] = 0;
   out_2686832696856623219[449] = 0;
   out_2686832696856623219[450] = 0;
   out_2686832696856623219[451] = 0;
   out_2686832696856623219[452] = 0;
   out_2686832696856623219[453] = 0;
   out_2686832696856623219[454] = 0;
   out_2686832696856623219[455] = 0;
   out_2686832696856623219[456] = 0;
   out_2686832696856623219[457] = 0;
   out_2686832696856623219[458] = 0;
   out_2686832696856623219[459] = 0;
   out_2686832696856623219[460] = 0;
   out_2686832696856623219[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3822263192861325508) {
   out_3822263192861325508[0] = dt*state[7] + state[0];
   out_3822263192861325508[1] = dt*state[8] + state[1];
   out_3822263192861325508[2] = dt*state[9] + state[2];
   out_3822263192861325508[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3822263192861325508[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3822263192861325508[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3822263192861325508[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3822263192861325508[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3822263192861325508[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3822263192861325508[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3822263192861325508[10] = state[10];
   out_3822263192861325508[11] = state[11];
   out_3822263192861325508[12] = state[12];
   out_3822263192861325508[13] = state[13];
   out_3822263192861325508[14] = state[14];
   out_3822263192861325508[15] = state[15];
   out_3822263192861325508[16] = state[16];
   out_3822263192861325508[17] = state[17];
   out_3822263192861325508[18] = state[18];
   out_3822263192861325508[19] = state[19];
   out_3822263192861325508[20] = state[20];
   out_3822263192861325508[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6455895415279509978) {
   out_6455895415279509978[0] = 1;
   out_6455895415279509978[1] = 0;
   out_6455895415279509978[2] = 0;
   out_6455895415279509978[3] = 0;
   out_6455895415279509978[4] = 0;
   out_6455895415279509978[5] = 0;
   out_6455895415279509978[6] = dt;
   out_6455895415279509978[7] = 0;
   out_6455895415279509978[8] = 0;
   out_6455895415279509978[9] = 0;
   out_6455895415279509978[10] = 0;
   out_6455895415279509978[11] = 0;
   out_6455895415279509978[12] = 0;
   out_6455895415279509978[13] = 0;
   out_6455895415279509978[14] = 0;
   out_6455895415279509978[15] = 0;
   out_6455895415279509978[16] = 0;
   out_6455895415279509978[17] = 0;
   out_6455895415279509978[18] = 0;
   out_6455895415279509978[19] = 0;
   out_6455895415279509978[20] = 0;
   out_6455895415279509978[21] = 0;
   out_6455895415279509978[22] = 1;
   out_6455895415279509978[23] = 0;
   out_6455895415279509978[24] = 0;
   out_6455895415279509978[25] = 0;
   out_6455895415279509978[26] = 0;
   out_6455895415279509978[27] = 0;
   out_6455895415279509978[28] = dt;
   out_6455895415279509978[29] = 0;
   out_6455895415279509978[30] = 0;
   out_6455895415279509978[31] = 0;
   out_6455895415279509978[32] = 0;
   out_6455895415279509978[33] = 0;
   out_6455895415279509978[34] = 0;
   out_6455895415279509978[35] = 0;
   out_6455895415279509978[36] = 0;
   out_6455895415279509978[37] = 0;
   out_6455895415279509978[38] = 0;
   out_6455895415279509978[39] = 0;
   out_6455895415279509978[40] = 0;
   out_6455895415279509978[41] = 0;
   out_6455895415279509978[42] = 0;
   out_6455895415279509978[43] = 0;
   out_6455895415279509978[44] = 1;
   out_6455895415279509978[45] = 0;
   out_6455895415279509978[46] = 0;
   out_6455895415279509978[47] = 0;
   out_6455895415279509978[48] = 0;
   out_6455895415279509978[49] = 0;
   out_6455895415279509978[50] = dt;
   out_6455895415279509978[51] = 0;
   out_6455895415279509978[52] = 0;
   out_6455895415279509978[53] = 0;
   out_6455895415279509978[54] = 0;
   out_6455895415279509978[55] = 0;
   out_6455895415279509978[56] = 0;
   out_6455895415279509978[57] = 0;
   out_6455895415279509978[58] = 0;
   out_6455895415279509978[59] = 0;
   out_6455895415279509978[60] = 0;
   out_6455895415279509978[61] = 0;
   out_6455895415279509978[62] = 0;
   out_6455895415279509978[63] = 0;
   out_6455895415279509978[64] = 0;
   out_6455895415279509978[65] = 0;
   out_6455895415279509978[66] = 1;
   out_6455895415279509978[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6455895415279509978[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6455895415279509978[69] = 0;
   out_6455895415279509978[70] = 0;
   out_6455895415279509978[71] = 0;
   out_6455895415279509978[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6455895415279509978[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6455895415279509978[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6455895415279509978[75] = 0;
   out_6455895415279509978[76] = 0;
   out_6455895415279509978[77] = 0;
   out_6455895415279509978[78] = 0;
   out_6455895415279509978[79] = 0;
   out_6455895415279509978[80] = 0;
   out_6455895415279509978[81] = 0;
   out_6455895415279509978[82] = 0;
   out_6455895415279509978[83] = 0;
   out_6455895415279509978[84] = 0;
   out_6455895415279509978[85] = 0;
   out_6455895415279509978[86] = 0;
   out_6455895415279509978[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6455895415279509978[88] = 1;
   out_6455895415279509978[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6455895415279509978[90] = 0;
   out_6455895415279509978[91] = 0;
   out_6455895415279509978[92] = 0;
   out_6455895415279509978[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6455895415279509978[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6455895415279509978[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6455895415279509978[96] = 0;
   out_6455895415279509978[97] = 0;
   out_6455895415279509978[98] = 0;
   out_6455895415279509978[99] = 0;
   out_6455895415279509978[100] = 0;
   out_6455895415279509978[101] = 0;
   out_6455895415279509978[102] = 0;
   out_6455895415279509978[103] = 0;
   out_6455895415279509978[104] = 0;
   out_6455895415279509978[105] = 0;
   out_6455895415279509978[106] = 0;
   out_6455895415279509978[107] = 0;
   out_6455895415279509978[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6455895415279509978[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6455895415279509978[110] = 1;
   out_6455895415279509978[111] = 0;
   out_6455895415279509978[112] = 0;
   out_6455895415279509978[113] = 0;
   out_6455895415279509978[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6455895415279509978[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6455895415279509978[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6455895415279509978[117] = 0;
   out_6455895415279509978[118] = 0;
   out_6455895415279509978[119] = 0;
   out_6455895415279509978[120] = 0;
   out_6455895415279509978[121] = 0;
   out_6455895415279509978[122] = 0;
   out_6455895415279509978[123] = 0;
   out_6455895415279509978[124] = 0;
   out_6455895415279509978[125] = 0;
   out_6455895415279509978[126] = 0;
   out_6455895415279509978[127] = 0;
   out_6455895415279509978[128] = 0;
   out_6455895415279509978[129] = 0;
   out_6455895415279509978[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6455895415279509978[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6455895415279509978[132] = 1;
   out_6455895415279509978[133] = 0;
   out_6455895415279509978[134] = 0;
   out_6455895415279509978[135] = 0;
   out_6455895415279509978[136] = 0;
   out_6455895415279509978[137] = 0;
   out_6455895415279509978[138] = 0;
   out_6455895415279509978[139] = 0;
   out_6455895415279509978[140] = 0;
   out_6455895415279509978[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6455895415279509978[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6455895415279509978[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6455895415279509978[144] = 0;
   out_6455895415279509978[145] = 0;
   out_6455895415279509978[146] = 0;
   out_6455895415279509978[147] = 0;
   out_6455895415279509978[148] = 0;
   out_6455895415279509978[149] = 0;
   out_6455895415279509978[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6455895415279509978[151] = 0;
   out_6455895415279509978[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6455895415279509978[153] = 0;
   out_6455895415279509978[154] = 1;
   out_6455895415279509978[155] = 0;
   out_6455895415279509978[156] = 0;
   out_6455895415279509978[157] = 0;
   out_6455895415279509978[158] = 0;
   out_6455895415279509978[159] = 0;
   out_6455895415279509978[160] = 0;
   out_6455895415279509978[161] = 0;
   out_6455895415279509978[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6455895415279509978[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6455895415279509978[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6455895415279509978[165] = 0;
   out_6455895415279509978[166] = 0;
   out_6455895415279509978[167] = 0;
   out_6455895415279509978[168] = 0;
   out_6455895415279509978[169] = 0;
   out_6455895415279509978[170] = 0;
   out_6455895415279509978[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6455895415279509978[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6455895415279509978[173] = 0;
   out_6455895415279509978[174] = 0;
   out_6455895415279509978[175] = 0;
   out_6455895415279509978[176] = 1;
   out_6455895415279509978[177] = 0;
   out_6455895415279509978[178] = 0;
   out_6455895415279509978[179] = 0;
   out_6455895415279509978[180] = 0;
   out_6455895415279509978[181] = 0;
   out_6455895415279509978[182] = 0;
   out_6455895415279509978[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6455895415279509978[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6455895415279509978[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6455895415279509978[186] = 0;
   out_6455895415279509978[187] = 0;
   out_6455895415279509978[188] = 0;
   out_6455895415279509978[189] = 0;
   out_6455895415279509978[190] = 0;
   out_6455895415279509978[191] = 0;
   out_6455895415279509978[192] = 0;
   out_6455895415279509978[193] = 0;
   out_6455895415279509978[194] = 0;
   out_6455895415279509978[195] = 0;
   out_6455895415279509978[196] = 0;
   out_6455895415279509978[197] = 0;
   out_6455895415279509978[198] = 1;
   out_6455895415279509978[199] = 0;
   out_6455895415279509978[200] = 0;
   out_6455895415279509978[201] = 0;
   out_6455895415279509978[202] = 0;
   out_6455895415279509978[203] = 0;
   out_6455895415279509978[204] = 0;
   out_6455895415279509978[205] = 0;
   out_6455895415279509978[206] = 0;
   out_6455895415279509978[207] = 0;
   out_6455895415279509978[208] = 0;
   out_6455895415279509978[209] = 0;
   out_6455895415279509978[210] = 0;
   out_6455895415279509978[211] = 0;
   out_6455895415279509978[212] = 0;
   out_6455895415279509978[213] = 0;
   out_6455895415279509978[214] = 0;
   out_6455895415279509978[215] = 0;
   out_6455895415279509978[216] = 0;
   out_6455895415279509978[217] = 0;
   out_6455895415279509978[218] = 0;
   out_6455895415279509978[219] = 0;
   out_6455895415279509978[220] = 1;
   out_6455895415279509978[221] = 0;
   out_6455895415279509978[222] = 0;
   out_6455895415279509978[223] = 0;
   out_6455895415279509978[224] = 0;
   out_6455895415279509978[225] = 0;
   out_6455895415279509978[226] = 0;
   out_6455895415279509978[227] = 0;
   out_6455895415279509978[228] = 0;
   out_6455895415279509978[229] = 0;
   out_6455895415279509978[230] = 0;
   out_6455895415279509978[231] = 0;
   out_6455895415279509978[232] = 0;
   out_6455895415279509978[233] = 0;
   out_6455895415279509978[234] = 0;
   out_6455895415279509978[235] = 0;
   out_6455895415279509978[236] = 0;
   out_6455895415279509978[237] = 0;
   out_6455895415279509978[238] = 0;
   out_6455895415279509978[239] = 0;
   out_6455895415279509978[240] = 0;
   out_6455895415279509978[241] = 0;
   out_6455895415279509978[242] = 1;
   out_6455895415279509978[243] = 0;
   out_6455895415279509978[244] = 0;
   out_6455895415279509978[245] = 0;
   out_6455895415279509978[246] = 0;
   out_6455895415279509978[247] = 0;
   out_6455895415279509978[248] = 0;
   out_6455895415279509978[249] = 0;
   out_6455895415279509978[250] = 0;
   out_6455895415279509978[251] = 0;
   out_6455895415279509978[252] = 0;
   out_6455895415279509978[253] = 0;
   out_6455895415279509978[254] = 0;
   out_6455895415279509978[255] = 0;
   out_6455895415279509978[256] = 0;
   out_6455895415279509978[257] = 0;
   out_6455895415279509978[258] = 0;
   out_6455895415279509978[259] = 0;
   out_6455895415279509978[260] = 0;
   out_6455895415279509978[261] = 0;
   out_6455895415279509978[262] = 0;
   out_6455895415279509978[263] = 0;
   out_6455895415279509978[264] = 1;
   out_6455895415279509978[265] = 0;
   out_6455895415279509978[266] = 0;
   out_6455895415279509978[267] = 0;
   out_6455895415279509978[268] = 0;
   out_6455895415279509978[269] = 0;
   out_6455895415279509978[270] = 0;
   out_6455895415279509978[271] = 0;
   out_6455895415279509978[272] = 0;
   out_6455895415279509978[273] = 0;
   out_6455895415279509978[274] = 0;
   out_6455895415279509978[275] = 0;
   out_6455895415279509978[276] = 0;
   out_6455895415279509978[277] = 0;
   out_6455895415279509978[278] = 0;
   out_6455895415279509978[279] = 0;
   out_6455895415279509978[280] = 0;
   out_6455895415279509978[281] = 0;
   out_6455895415279509978[282] = 0;
   out_6455895415279509978[283] = 0;
   out_6455895415279509978[284] = 0;
   out_6455895415279509978[285] = 0;
   out_6455895415279509978[286] = 1;
   out_6455895415279509978[287] = 0;
   out_6455895415279509978[288] = 0;
   out_6455895415279509978[289] = 0;
   out_6455895415279509978[290] = 0;
   out_6455895415279509978[291] = 0;
   out_6455895415279509978[292] = 0;
   out_6455895415279509978[293] = 0;
   out_6455895415279509978[294] = 0;
   out_6455895415279509978[295] = 0;
   out_6455895415279509978[296] = 0;
   out_6455895415279509978[297] = 0;
   out_6455895415279509978[298] = 0;
   out_6455895415279509978[299] = 0;
   out_6455895415279509978[300] = 0;
   out_6455895415279509978[301] = 0;
   out_6455895415279509978[302] = 0;
   out_6455895415279509978[303] = 0;
   out_6455895415279509978[304] = 0;
   out_6455895415279509978[305] = 0;
   out_6455895415279509978[306] = 0;
   out_6455895415279509978[307] = 0;
   out_6455895415279509978[308] = 1;
   out_6455895415279509978[309] = 0;
   out_6455895415279509978[310] = 0;
   out_6455895415279509978[311] = 0;
   out_6455895415279509978[312] = 0;
   out_6455895415279509978[313] = 0;
   out_6455895415279509978[314] = 0;
   out_6455895415279509978[315] = 0;
   out_6455895415279509978[316] = 0;
   out_6455895415279509978[317] = 0;
   out_6455895415279509978[318] = 0;
   out_6455895415279509978[319] = 0;
   out_6455895415279509978[320] = 0;
   out_6455895415279509978[321] = 0;
   out_6455895415279509978[322] = 0;
   out_6455895415279509978[323] = 0;
   out_6455895415279509978[324] = 0;
   out_6455895415279509978[325] = 0;
   out_6455895415279509978[326] = 0;
   out_6455895415279509978[327] = 0;
   out_6455895415279509978[328] = 0;
   out_6455895415279509978[329] = 0;
   out_6455895415279509978[330] = 1;
   out_6455895415279509978[331] = 0;
   out_6455895415279509978[332] = 0;
   out_6455895415279509978[333] = 0;
   out_6455895415279509978[334] = 0;
   out_6455895415279509978[335] = 0;
   out_6455895415279509978[336] = 0;
   out_6455895415279509978[337] = 0;
   out_6455895415279509978[338] = 0;
   out_6455895415279509978[339] = 0;
   out_6455895415279509978[340] = 0;
   out_6455895415279509978[341] = 0;
   out_6455895415279509978[342] = 0;
   out_6455895415279509978[343] = 0;
   out_6455895415279509978[344] = 0;
   out_6455895415279509978[345] = 0;
   out_6455895415279509978[346] = 0;
   out_6455895415279509978[347] = 0;
   out_6455895415279509978[348] = 0;
   out_6455895415279509978[349] = 0;
   out_6455895415279509978[350] = 0;
   out_6455895415279509978[351] = 0;
   out_6455895415279509978[352] = 1;
   out_6455895415279509978[353] = 0;
   out_6455895415279509978[354] = 0;
   out_6455895415279509978[355] = 0;
   out_6455895415279509978[356] = 0;
   out_6455895415279509978[357] = 0;
   out_6455895415279509978[358] = 0;
   out_6455895415279509978[359] = 0;
   out_6455895415279509978[360] = 0;
   out_6455895415279509978[361] = 0;
   out_6455895415279509978[362] = 0;
   out_6455895415279509978[363] = 0;
   out_6455895415279509978[364] = 0;
   out_6455895415279509978[365] = 0;
   out_6455895415279509978[366] = 0;
   out_6455895415279509978[367] = 0;
   out_6455895415279509978[368] = 0;
   out_6455895415279509978[369] = 0;
   out_6455895415279509978[370] = 0;
   out_6455895415279509978[371] = 0;
   out_6455895415279509978[372] = 0;
   out_6455895415279509978[373] = 0;
   out_6455895415279509978[374] = 1;
   out_6455895415279509978[375] = 0;
   out_6455895415279509978[376] = 0;
   out_6455895415279509978[377] = 0;
   out_6455895415279509978[378] = 0;
   out_6455895415279509978[379] = 0;
   out_6455895415279509978[380] = 0;
   out_6455895415279509978[381] = 0;
   out_6455895415279509978[382] = 0;
   out_6455895415279509978[383] = 0;
   out_6455895415279509978[384] = 0;
   out_6455895415279509978[385] = 0;
   out_6455895415279509978[386] = 0;
   out_6455895415279509978[387] = 0;
   out_6455895415279509978[388] = 0;
   out_6455895415279509978[389] = 0;
   out_6455895415279509978[390] = 0;
   out_6455895415279509978[391] = 0;
   out_6455895415279509978[392] = 0;
   out_6455895415279509978[393] = 0;
   out_6455895415279509978[394] = 0;
   out_6455895415279509978[395] = 0;
   out_6455895415279509978[396] = 1;
   out_6455895415279509978[397] = 0;
   out_6455895415279509978[398] = 0;
   out_6455895415279509978[399] = 0;
   out_6455895415279509978[400] = 0;
   out_6455895415279509978[401] = 0;
   out_6455895415279509978[402] = 0;
   out_6455895415279509978[403] = 0;
   out_6455895415279509978[404] = 0;
   out_6455895415279509978[405] = 0;
   out_6455895415279509978[406] = 0;
   out_6455895415279509978[407] = 0;
   out_6455895415279509978[408] = 0;
   out_6455895415279509978[409] = 0;
   out_6455895415279509978[410] = 0;
   out_6455895415279509978[411] = 0;
   out_6455895415279509978[412] = 0;
   out_6455895415279509978[413] = 0;
   out_6455895415279509978[414] = 0;
   out_6455895415279509978[415] = 0;
   out_6455895415279509978[416] = 0;
   out_6455895415279509978[417] = 0;
   out_6455895415279509978[418] = 1;
   out_6455895415279509978[419] = 0;
   out_6455895415279509978[420] = 0;
   out_6455895415279509978[421] = 0;
   out_6455895415279509978[422] = 0;
   out_6455895415279509978[423] = 0;
   out_6455895415279509978[424] = 0;
   out_6455895415279509978[425] = 0;
   out_6455895415279509978[426] = 0;
   out_6455895415279509978[427] = 0;
   out_6455895415279509978[428] = 0;
   out_6455895415279509978[429] = 0;
   out_6455895415279509978[430] = 0;
   out_6455895415279509978[431] = 0;
   out_6455895415279509978[432] = 0;
   out_6455895415279509978[433] = 0;
   out_6455895415279509978[434] = 0;
   out_6455895415279509978[435] = 0;
   out_6455895415279509978[436] = 0;
   out_6455895415279509978[437] = 0;
   out_6455895415279509978[438] = 0;
   out_6455895415279509978[439] = 0;
   out_6455895415279509978[440] = 1;
}
void h_4(double *state, double *unused, double *out_3494769867212102904) {
   out_3494769867212102904[0] = state[10] + state[13];
   out_3494769867212102904[1] = state[11] + state[14];
   out_3494769867212102904[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1451768599627278965) {
   out_1451768599627278965[0] = 0;
   out_1451768599627278965[1] = 0;
   out_1451768599627278965[2] = 0;
   out_1451768599627278965[3] = 0;
   out_1451768599627278965[4] = 0;
   out_1451768599627278965[5] = 0;
   out_1451768599627278965[6] = 0;
   out_1451768599627278965[7] = 0;
   out_1451768599627278965[8] = 0;
   out_1451768599627278965[9] = 0;
   out_1451768599627278965[10] = 1;
   out_1451768599627278965[11] = 0;
   out_1451768599627278965[12] = 0;
   out_1451768599627278965[13] = 1;
   out_1451768599627278965[14] = 0;
   out_1451768599627278965[15] = 0;
   out_1451768599627278965[16] = 0;
   out_1451768599627278965[17] = 0;
   out_1451768599627278965[18] = 0;
   out_1451768599627278965[19] = 0;
   out_1451768599627278965[20] = 0;
   out_1451768599627278965[21] = 0;
   out_1451768599627278965[22] = 0;
   out_1451768599627278965[23] = 0;
   out_1451768599627278965[24] = 0;
   out_1451768599627278965[25] = 0;
   out_1451768599627278965[26] = 0;
   out_1451768599627278965[27] = 0;
   out_1451768599627278965[28] = 0;
   out_1451768599627278965[29] = 0;
   out_1451768599627278965[30] = 0;
   out_1451768599627278965[31] = 0;
   out_1451768599627278965[32] = 0;
   out_1451768599627278965[33] = 1;
   out_1451768599627278965[34] = 0;
   out_1451768599627278965[35] = 0;
   out_1451768599627278965[36] = 1;
   out_1451768599627278965[37] = 0;
   out_1451768599627278965[38] = 0;
   out_1451768599627278965[39] = 0;
   out_1451768599627278965[40] = 0;
   out_1451768599627278965[41] = 0;
   out_1451768599627278965[42] = 0;
   out_1451768599627278965[43] = 0;
   out_1451768599627278965[44] = 0;
   out_1451768599627278965[45] = 0;
   out_1451768599627278965[46] = 0;
   out_1451768599627278965[47] = 0;
   out_1451768599627278965[48] = 0;
   out_1451768599627278965[49] = 0;
   out_1451768599627278965[50] = 0;
   out_1451768599627278965[51] = 0;
   out_1451768599627278965[52] = 0;
   out_1451768599627278965[53] = 0;
   out_1451768599627278965[54] = 0;
   out_1451768599627278965[55] = 0;
   out_1451768599627278965[56] = 1;
   out_1451768599627278965[57] = 0;
   out_1451768599627278965[58] = 0;
   out_1451768599627278965[59] = 1;
   out_1451768599627278965[60] = 0;
   out_1451768599627278965[61] = 0;
   out_1451768599627278965[62] = 0;
   out_1451768599627278965[63] = 0;
   out_1451768599627278965[64] = 0;
   out_1451768599627278965[65] = 0;
}
void h_9(double *state, double *unused, double *out_6878791664417266905) {
   out_6878791664417266905[0] = state[10];
   out_6878791664417266905[1] = state[11];
   out_6878791664417266905[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1210578952997688320) {
   out_1210578952997688320[0] = 0;
   out_1210578952997688320[1] = 0;
   out_1210578952997688320[2] = 0;
   out_1210578952997688320[3] = 0;
   out_1210578952997688320[4] = 0;
   out_1210578952997688320[5] = 0;
   out_1210578952997688320[6] = 0;
   out_1210578952997688320[7] = 0;
   out_1210578952997688320[8] = 0;
   out_1210578952997688320[9] = 0;
   out_1210578952997688320[10] = 1;
   out_1210578952997688320[11] = 0;
   out_1210578952997688320[12] = 0;
   out_1210578952997688320[13] = 0;
   out_1210578952997688320[14] = 0;
   out_1210578952997688320[15] = 0;
   out_1210578952997688320[16] = 0;
   out_1210578952997688320[17] = 0;
   out_1210578952997688320[18] = 0;
   out_1210578952997688320[19] = 0;
   out_1210578952997688320[20] = 0;
   out_1210578952997688320[21] = 0;
   out_1210578952997688320[22] = 0;
   out_1210578952997688320[23] = 0;
   out_1210578952997688320[24] = 0;
   out_1210578952997688320[25] = 0;
   out_1210578952997688320[26] = 0;
   out_1210578952997688320[27] = 0;
   out_1210578952997688320[28] = 0;
   out_1210578952997688320[29] = 0;
   out_1210578952997688320[30] = 0;
   out_1210578952997688320[31] = 0;
   out_1210578952997688320[32] = 0;
   out_1210578952997688320[33] = 1;
   out_1210578952997688320[34] = 0;
   out_1210578952997688320[35] = 0;
   out_1210578952997688320[36] = 0;
   out_1210578952997688320[37] = 0;
   out_1210578952997688320[38] = 0;
   out_1210578952997688320[39] = 0;
   out_1210578952997688320[40] = 0;
   out_1210578952997688320[41] = 0;
   out_1210578952997688320[42] = 0;
   out_1210578952997688320[43] = 0;
   out_1210578952997688320[44] = 0;
   out_1210578952997688320[45] = 0;
   out_1210578952997688320[46] = 0;
   out_1210578952997688320[47] = 0;
   out_1210578952997688320[48] = 0;
   out_1210578952997688320[49] = 0;
   out_1210578952997688320[50] = 0;
   out_1210578952997688320[51] = 0;
   out_1210578952997688320[52] = 0;
   out_1210578952997688320[53] = 0;
   out_1210578952997688320[54] = 0;
   out_1210578952997688320[55] = 0;
   out_1210578952997688320[56] = 1;
   out_1210578952997688320[57] = 0;
   out_1210578952997688320[58] = 0;
   out_1210578952997688320[59] = 0;
   out_1210578952997688320[60] = 0;
   out_1210578952997688320[61] = 0;
   out_1210578952997688320[62] = 0;
   out_1210578952997688320[63] = 0;
   out_1210578952997688320[64] = 0;
   out_1210578952997688320[65] = 0;
}
void h_10(double *state, double *unused, double *out_4380493807452258420) {
   out_4380493807452258420[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4380493807452258420[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4380493807452258420[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1918065783372193268) {
   out_1918065783372193268[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1918065783372193268[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1918065783372193268[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1918065783372193268[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1918065783372193268[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1918065783372193268[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1918065783372193268[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1918065783372193268[7] = 0;
   out_1918065783372193268[8] = 0;
   out_1918065783372193268[9] = 0;
   out_1918065783372193268[10] = 0;
   out_1918065783372193268[11] = 0;
   out_1918065783372193268[12] = 0;
   out_1918065783372193268[13] = 0;
   out_1918065783372193268[14] = 0;
   out_1918065783372193268[15] = 0;
   out_1918065783372193268[16] = 1;
   out_1918065783372193268[17] = 0;
   out_1918065783372193268[18] = 0;
   out_1918065783372193268[19] = 1;
   out_1918065783372193268[20] = 0;
   out_1918065783372193268[21] = 0;
   out_1918065783372193268[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1918065783372193268[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1918065783372193268[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1918065783372193268[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1918065783372193268[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1918065783372193268[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1918065783372193268[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1918065783372193268[29] = 0;
   out_1918065783372193268[30] = 0;
   out_1918065783372193268[31] = 0;
   out_1918065783372193268[32] = 0;
   out_1918065783372193268[33] = 0;
   out_1918065783372193268[34] = 0;
   out_1918065783372193268[35] = 0;
   out_1918065783372193268[36] = 0;
   out_1918065783372193268[37] = 0;
   out_1918065783372193268[38] = 0;
   out_1918065783372193268[39] = 1;
   out_1918065783372193268[40] = 0;
   out_1918065783372193268[41] = 0;
   out_1918065783372193268[42] = 1;
   out_1918065783372193268[43] = 0;
   out_1918065783372193268[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1918065783372193268[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1918065783372193268[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1918065783372193268[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1918065783372193268[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1918065783372193268[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1918065783372193268[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1918065783372193268[51] = 0;
   out_1918065783372193268[52] = 0;
   out_1918065783372193268[53] = 0;
   out_1918065783372193268[54] = 0;
   out_1918065783372193268[55] = 0;
   out_1918065783372193268[56] = 0;
   out_1918065783372193268[57] = 0;
   out_1918065783372193268[58] = 0;
   out_1918065783372193268[59] = 0;
   out_1918065783372193268[60] = 0;
   out_1918065783372193268[61] = 0;
   out_1918065783372193268[62] = 1;
   out_1918065783372193268[63] = 0;
   out_1918065783372193268[64] = 0;
   out_1918065783372193268[65] = 1;
}
void h_12(double *state, double *unused, double *out_1827589486894337029) {
   out_1827589486894337029[0] = state[0];
   out_1827589486894337029[1] = state[1];
   out_1827589486894337029[2] = state[2];
}
void H_12(double *state, double *unused, double *out_830669574579685298) {
   out_830669574579685298[0] = 1;
   out_830669574579685298[1] = 0;
   out_830669574579685298[2] = 0;
   out_830669574579685298[3] = 0;
   out_830669574579685298[4] = 0;
   out_830669574579685298[5] = 0;
   out_830669574579685298[6] = 0;
   out_830669574579685298[7] = 0;
   out_830669574579685298[8] = 0;
   out_830669574579685298[9] = 0;
   out_830669574579685298[10] = 0;
   out_830669574579685298[11] = 0;
   out_830669574579685298[12] = 0;
   out_830669574579685298[13] = 0;
   out_830669574579685298[14] = 0;
   out_830669574579685298[15] = 0;
   out_830669574579685298[16] = 0;
   out_830669574579685298[17] = 0;
   out_830669574579685298[18] = 0;
   out_830669574579685298[19] = 0;
   out_830669574579685298[20] = 0;
   out_830669574579685298[21] = 0;
   out_830669574579685298[22] = 0;
   out_830669574579685298[23] = 1;
   out_830669574579685298[24] = 0;
   out_830669574579685298[25] = 0;
   out_830669574579685298[26] = 0;
   out_830669574579685298[27] = 0;
   out_830669574579685298[28] = 0;
   out_830669574579685298[29] = 0;
   out_830669574579685298[30] = 0;
   out_830669574579685298[31] = 0;
   out_830669574579685298[32] = 0;
   out_830669574579685298[33] = 0;
   out_830669574579685298[34] = 0;
   out_830669574579685298[35] = 0;
   out_830669574579685298[36] = 0;
   out_830669574579685298[37] = 0;
   out_830669574579685298[38] = 0;
   out_830669574579685298[39] = 0;
   out_830669574579685298[40] = 0;
   out_830669574579685298[41] = 0;
   out_830669574579685298[42] = 0;
   out_830669574579685298[43] = 0;
   out_830669574579685298[44] = 0;
   out_830669574579685298[45] = 0;
   out_830669574579685298[46] = 1;
   out_830669574579685298[47] = 0;
   out_830669574579685298[48] = 0;
   out_830669574579685298[49] = 0;
   out_830669574579685298[50] = 0;
   out_830669574579685298[51] = 0;
   out_830669574579685298[52] = 0;
   out_830669574579685298[53] = 0;
   out_830669574579685298[54] = 0;
   out_830669574579685298[55] = 0;
   out_830669574579685298[56] = 0;
   out_830669574579685298[57] = 0;
   out_830669574579685298[58] = 0;
   out_830669574579685298[59] = 0;
   out_830669574579685298[60] = 0;
   out_830669574579685298[61] = 0;
   out_830669574579685298[62] = 0;
   out_830669574579685298[63] = 0;
   out_830669574579685298[64] = 0;
   out_830669574579685298[65] = 0;
}
void h_35(double *state, double *unused, double *out_8082777464406159763) {
   out_8082777464406159763[0] = state[7];
   out_8082777464406159763[1] = state[8];
   out_8082777464406159763[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1914893457745328411) {
   out_1914893457745328411[0] = 0;
   out_1914893457745328411[1] = 0;
   out_1914893457745328411[2] = 0;
   out_1914893457745328411[3] = 0;
   out_1914893457745328411[4] = 0;
   out_1914893457745328411[5] = 0;
   out_1914893457745328411[6] = 0;
   out_1914893457745328411[7] = 1;
   out_1914893457745328411[8] = 0;
   out_1914893457745328411[9] = 0;
   out_1914893457745328411[10] = 0;
   out_1914893457745328411[11] = 0;
   out_1914893457745328411[12] = 0;
   out_1914893457745328411[13] = 0;
   out_1914893457745328411[14] = 0;
   out_1914893457745328411[15] = 0;
   out_1914893457745328411[16] = 0;
   out_1914893457745328411[17] = 0;
   out_1914893457745328411[18] = 0;
   out_1914893457745328411[19] = 0;
   out_1914893457745328411[20] = 0;
   out_1914893457745328411[21] = 0;
   out_1914893457745328411[22] = 0;
   out_1914893457745328411[23] = 0;
   out_1914893457745328411[24] = 0;
   out_1914893457745328411[25] = 0;
   out_1914893457745328411[26] = 0;
   out_1914893457745328411[27] = 0;
   out_1914893457745328411[28] = 0;
   out_1914893457745328411[29] = 0;
   out_1914893457745328411[30] = 1;
   out_1914893457745328411[31] = 0;
   out_1914893457745328411[32] = 0;
   out_1914893457745328411[33] = 0;
   out_1914893457745328411[34] = 0;
   out_1914893457745328411[35] = 0;
   out_1914893457745328411[36] = 0;
   out_1914893457745328411[37] = 0;
   out_1914893457745328411[38] = 0;
   out_1914893457745328411[39] = 0;
   out_1914893457745328411[40] = 0;
   out_1914893457745328411[41] = 0;
   out_1914893457745328411[42] = 0;
   out_1914893457745328411[43] = 0;
   out_1914893457745328411[44] = 0;
   out_1914893457745328411[45] = 0;
   out_1914893457745328411[46] = 0;
   out_1914893457745328411[47] = 0;
   out_1914893457745328411[48] = 0;
   out_1914893457745328411[49] = 0;
   out_1914893457745328411[50] = 0;
   out_1914893457745328411[51] = 0;
   out_1914893457745328411[52] = 0;
   out_1914893457745328411[53] = 1;
   out_1914893457745328411[54] = 0;
   out_1914893457745328411[55] = 0;
   out_1914893457745328411[56] = 0;
   out_1914893457745328411[57] = 0;
   out_1914893457745328411[58] = 0;
   out_1914893457745328411[59] = 0;
   out_1914893457745328411[60] = 0;
   out_1914893457745328411[61] = 0;
   out_1914893457745328411[62] = 0;
   out_1914893457745328411[63] = 0;
   out_1914893457745328411[64] = 0;
   out_1914893457745328411[65] = 0;
}
void h_32(double *state, double *unused, double *out_3678648917755286173) {
   out_3678648917755286173[0] = state[3];
   out_3678648917755286173[1] = state[4];
   out_3678648917755286173[2] = state[5];
   out_3678648917755286173[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7716197829952940969) {
   out_7716197829952940969[0] = 0;
   out_7716197829952940969[1] = 0;
   out_7716197829952940969[2] = 0;
   out_7716197829952940969[3] = 1;
   out_7716197829952940969[4] = 0;
   out_7716197829952940969[5] = 0;
   out_7716197829952940969[6] = 0;
   out_7716197829952940969[7] = 0;
   out_7716197829952940969[8] = 0;
   out_7716197829952940969[9] = 0;
   out_7716197829952940969[10] = 0;
   out_7716197829952940969[11] = 0;
   out_7716197829952940969[12] = 0;
   out_7716197829952940969[13] = 0;
   out_7716197829952940969[14] = 0;
   out_7716197829952940969[15] = 0;
   out_7716197829952940969[16] = 0;
   out_7716197829952940969[17] = 0;
   out_7716197829952940969[18] = 0;
   out_7716197829952940969[19] = 0;
   out_7716197829952940969[20] = 0;
   out_7716197829952940969[21] = 0;
   out_7716197829952940969[22] = 0;
   out_7716197829952940969[23] = 0;
   out_7716197829952940969[24] = 0;
   out_7716197829952940969[25] = 0;
   out_7716197829952940969[26] = 1;
   out_7716197829952940969[27] = 0;
   out_7716197829952940969[28] = 0;
   out_7716197829952940969[29] = 0;
   out_7716197829952940969[30] = 0;
   out_7716197829952940969[31] = 0;
   out_7716197829952940969[32] = 0;
   out_7716197829952940969[33] = 0;
   out_7716197829952940969[34] = 0;
   out_7716197829952940969[35] = 0;
   out_7716197829952940969[36] = 0;
   out_7716197829952940969[37] = 0;
   out_7716197829952940969[38] = 0;
   out_7716197829952940969[39] = 0;
   out_7716197829952940969[40] = 0;
   out_7716197829952940969[41] = 0;
   out_7716197829952940969[42] = 0;
   out_7716197829952940969[43] = 0;
   out_7716197829952940969[44] = 0;
   out_7716197829952940969[45] = 0;
   out_7716197829952940969[46] = 0;
   out_7716197829952940969[47] = 0;
   out_7716197829952940969[48] = 0;
   out_7716197829952940969[49] = 1;
   out_7716197829952940969[50] = 0;
   out_7716197829952940969[51] = 0;
   out_7716197829952940969[52] = 0;
   out_7716197829952940969[53] = 0;
   out_7716197829952940969[54] = 0;
   out_7716197829952940969[55] = 0;
   out_7716197829952940969[56] = 0;
   out_7716197829952940969[57] = 0;
   out_7716197829952940969[58] = 0;
   out_7716197829952940969[59] = 0;
   out_7716197829952940969[60] = 0;
   out_7716197829952940969[61] = 0;
   out_7716197829952940969[62] = 0;
   out_7716197829952940969[63] = 0;
   out_7716197829952940969[64] = 0;
   out_7716197829952940969[65] = 0;
   out_7716197829952940969[66] = 0;
   out_7716197829952940969[67] = 0;
   out_7716197829952940969[68] = 0;
   out_7716197829952940969[69] = 0;
   out_7716197829952940969[70] = 0;
   out_7716197829952940969[71] = 0;
   out_7716197829952940969[72] = 1;
   out_7716197829952940969[73] = 0;
   out_7716197829952940969[74] = 0;
   out_7716197829952940969[75] = 0;
   out_7716197829952940969[76] = 0;
   out_7716197829952940969[77] = 0;
   out_7716197829952940969[78] = 0;
   out_7716197829952940969[79] = 0;
   out_7716197829952940969[80] = 0;
   out_7716197829952940969[81] = 0;
   out_7716197829952940969[82] = 0;
   out_7716197829952940969[83] = 0;
   out_7716197829952940969[84] = 0;
   out_7716197829952940969[85] = 0;
   out_7716197829952940969[86] = 0;
   out_7716197829952940969[87] = 0;
}
void h_13(double *state, double *unused, double *out_2018478861536013333) {
   out_2018478861536013333[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2018478861536013333[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2018478861536013333[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3066565144776721745) {
   out_3066565144776721745[0] = 0;
   out_3066565144776721745[1] = 0;
   out_3066565144776721745[2] = 0;
   out_3066565144776721745[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3066565144776721745[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3066565144776721745[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3066565144776721745[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3066565144776721745[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3066565144776721745[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3066565144776721745[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3066565144776721745[10] = 0;
   out_3066565144776721745[11] = 0;
   out_3066565144776721745[12] = 0;
   out_3066565144776721745[13] = 0;
   out_3066565144776721745[14] = 0;
   out_3066565144776721745[15] = 0;
   out_3066565144776721745[16] = 0;
   out_3066565144776721745[17] = 0;
   out_3066565144776721745[18] = 0;
   out_3066565144776721745[19] = 0;
   out_3066565144776721745[20] = 0;
   out_3066565144776721745[21] = 0;
   out_3066565144776721745[22] = 0;
   out_3066565144776721745[23] = 0;
   out_3066565144776721745[24] = 0;
   out_3066565144776721745[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3066565144776721745[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3066565144776721745[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3066565144776721745[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3066565144776721745[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3066565144776721745[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3066565144776721745[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3066565144776721745[32] = 0;
   out_3066565144776721745[33] = 0;
   out_3066565144776721745[34] = 0;
   out_3066565144776721745[35] = 0;
   out_3066565144776721745[36] = 0;
   out_3066565144776721745[37] = 0;
   out_3066565144776721745[38] = 0;
   out_3066565144776721745[39] = 0;
   out_3066565144776721745[40] = 0;
   out_3066565144776721745[41] = 0;
   out_3066565144776721745[42] = 0;
   out_3066565144776721745[43] = 0;
   out_3066565144776721745[44] = 0;
   out_3066565144776721745[45] = 0;
   out_3066565144776721745[46] = 0;
   out_3066565144776721745[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3066565144776721745[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3066565144776721745[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3066565144776721745[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3066565144776721745[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3066565144776721745[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3066565144776721745[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3066565144776721745[54] = 0;
   out_3066565144776721745[55] = 0;
   out_3066565144776721745[56] = 0;
   out_3066565144776721745[57] = 0;
   out_3066565144776721745[58] = 0;
   out_3066565144776721745[59] = 0;
   out_3066565144776721745[60] = 0;
   out_3066565144776721745[61] = 0;
   out_3066565144776721745[62] = 0;
   out_3066565144776721745[63] = 0;
   out_3066565144776721745[64] = 0;
   out_3066565144776721745[65] = 0;
}
void h_14(double *state, double *unused, double *out_6878791664417266905) {
   out_6878791664417266905[0] = state[10];
   out_6878791664417266905[1] = state[11];
   out_6878791664417266905[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1210578952997688320) {
   out_1210578952997688320[0] = 0;
   out_1210578952997688320[1] = 0;
   out_1210578952997688320[2] = 0;
   out_1210578952997688320[3] = 0;
   out_1210578952997688320[4] = 0;
   out_1210578952997688320[5] = 0;
   out_1210578952997688320[6] = 0;
   out_1210578952997688320[7] = 0;
   out_1210578952997688320[8] = 0;
   out_1210578952997688320[9] = 0;
   out_1210578952997688320[10] = 1;
   out_1210578952997688320[11] = 0;
   out_1210578952997688320[12] = 0;
   out_1210578952997688320[13] = 0;
   out_1210578952997688320[14] = 0;
   out_1210578952997688320[15] = 0;
   out_1210578952997688320[16] = 0;
   out_1210578952997688320[17] = 0;
   out_1210578952997688320[18] = 0;
   out_1210578952997688320[19] = 0;
   out_1210578952997688320[20] = 0;
   out_1210578952997688320[21] = 0;
   out_1210578952997688320[22] = 0;
   out_1210578952997688320[23] = 0;
   out_1210578952997688320[24] = 0;
   out_1210578952997688320[25] = 0;
   out_1210578952997688320[26] = 0;
   out_1210578952997688320[27] = 0;
   out_1210578952997688320[28] = 0;
   out_1210578952997688320[29] = 0;
   out_1210578952997688320[30] = 0;
   out_1210578952997688320[31] = 0;
   out_1210578952997688320[32] = 0;
   out_1210578952997688320[33] = 1;
   out_1210578952997688320[34] = 0;
   out_1210578952997688320[35] = 0;
   out_1210578952997688320[36] = 0;
   out_1210578952997688320[37] = 0;
   out_1210578952997688320[38] = 0;
   out_1210578952997688320[39] = 0;
   out_1210578952997688320[40] = 0;
   out_1210578952997688320[41] = 0;
   out_1210578952997688320[42] = 0;
   out_1210578952997688320[43] = 0;
   out_1210578952997688320[44] = 0;
   out_1210578952997688320[45] = 0;
   out_1210578952997688320[46] = 0;
   out_1210578952997688320[47] = 0;
   out_1210578952997688320[48] = 0;
   out_1210578952997688320[49] = 0;
   out_1210578952997688320[50] = 0;
   out_1210578952997688320[51] = 0;
   out_1210578952997688320[52] = 0;
   out_1210578952997688320[53] = 0;
   out_1210578952997688320[54] = 0;
   out_1210578952997688320[55] = 0;
   out_1210578952997688320[56] = 1;
   out_1210578952997688320[57] = 0;
   out_1210578952997688320[58] = 0;
   out_1210578952997688320[59] = 0;
   out_1210578952997688320[60] = 0;
   out_1210578952997688320[61] = 0;
   out_1210578952997688320[62] = 0;
   out_1210578952997688320[63] = 0;
   out_1210578952997688320[64] = 0;
   out_1210578952997688320[65] = 0;
}
void h_33(double *state, double *unused, double *out_5620049043069576208) {
   out_5620049043069576208[0] = state[16];
   out_5620049043069576208[1] = state[17];
   out_5620049043069576208[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5065450462384186015) {
   out_5065450462384186015[0] = 0;
   out_5065450462384186015[1] = 0;
   out_5065450462384186015[2] = 0;
   out_5065450462384186015[3] = 0;
   out_5065450462384186015[4] = 0;
   out_5065450462384186015[5] = 0;
   out_5065450462384186015[6] = 0;
   out_5065450462384186015[7] = 0;
   out_5065450462384186015[8] = 0;
   out_5065450462384186015[9] = 0;
   out_5065450462384186015[10] = 0;
   out_5065450462384186015[11] = 0;
   out_5065450462384186015[12] = 0;
   out_5065450462384186015[13] = 0;
   out_5065450462384186015[14] = 0;
   out_5065450462384186015[15] = 0;
   out_5065450462384186015[16] = 1;
   out_5065450462384186015[17] = 0;
   out_5065450462384186015[18] = 0;
   out_5065450462384186015[19] = 0;
   out_5065450462384186015[20] = 0;
   out_5065450462384186015[21] = 0;
   out_5065450462384186015[22] = 0;
   out_5065450462384186015[23] = 0;
   out_5065450462384186015[24] = 0;
   out_5065450462384186015[25] = 0;
   out_5065450462384186015[26] = 0;
   out_5065450462384186015[27] = 0;
   out_5065450462384186015[28] = 0;
   out_5065450462384186015[29] = 0;
   out_5065450462384186015[30] = 0;
   out_5065450462384186015[31] = 0;
   out_5065450462384186015[32] = 0;
   out_5065450462384186015[33] = 0;
   out_5065450462384186015[34] = 0;
   out_5065450462384186015[35] = 0;
   out_5065450462384186015[36] = 0;
   out_5065450462384186015[37] = 0;
   out_5065450462384186015[38] = 0;
   out_5065450462384186015[39] = 1;
   out_5065450462384186015[40] = 0;
   out_5065450462384186015[41] = 0;
   out_5065450462384186015[42] = 0;
   out_5065450462384186015[43] = 0;
   out_5065450462384186015[44] = 0;
   out_5065450462384186015[45] = 0;
   out_5065450462384186015[46] = 0;
   out_5065450462384186015[47] = 0;
   out_5065450462384186015[48] = 0;
   out_5065450462384186015[49] = 0;
   out_5065450462384186015[50] = 0;
   out_5065450462384186015[51] = 0;
   out_5065450462384186015[52] = 0;
   out_5065450462384186015[53] = 0;
   out_5065450462384186015[54] = 0;
   out_5065450462384186015[55] = 0;
   out_5065450462384186015[56] = 0;
   out_5065450462384186015[57] = 0;
   out_5065450462384186015[58] = 0;
   out_5065450462384186015[59] = 0;
   out_5065450462384186015[60] = 0;
   out_5065450462384186015[61] = 0;
   out_5065450462384186015[62] = 1;
   out_5065450462384186015[63] = 0;
   out_5065450462384186015[64] = 0;
   out_5065450462384186015[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6543170510918427396) {
  H(in_vec, out_6543170510918427396);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9062015891362533785) {
  err_fun(nom_x, delta_x, out_9062015891362533785);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4758141739877846608) {
  inv_err_fun(nom_x, true_x, out_4758141739877846608);
}
void live_H_mod_fun(double *state, double *out_2686832696856623219) {
  H_mod_fun(state, out_2686832696856623219);
}
void live_f_fun(double *state, double dt, double *out_3822263192861325508) {
  f_fun(state,  dt, out_3822263192861325508);
}
void live_F_fun(double *state, double dt, double *out_6455895415279509978) {
  F_fun(state,  dt, out_6455895415279509978);
}
void live_h_4(double *state, double *unused, double *out_3494769867212102904) {
  h_4(state, unused, out_3494769867212102904);
}
void live_H_4(double *state, double *unused, double *out_1451768599627278965) {
  H_4(state, unused, out_1451768599627278965);
}
void live_h_9(double *state, double *unused, double *out_6878791664417266905) {
  h_9(state, unused, out_6878791664417266905);
}
void live_H_9(double *state, double *unused, double *out_1210578952997688320) {
  H_9(state, unused, out_1210578952997688320);
}
void live_h_10(double *state, double *unused, double *out_4380493807452258420) {
  h_10(state, unused, out_4380493807452258420);
}
void live_H_10(double *state, double *unused, double *out_1918065783372193268) {
  H_10(state, unused, out_1918065783372193268);
}
void live_h_12(double *state, double *unused, double *out_1827589486894337029) {
  h_12(state, unused, out_1827589486894337029);
}
void live_H_12(double *state, double *unused, double *out_830669574579685298) {
  H_12(state, unused, out_830669574579685298);
}
void live_h_35(double *state, double *unused, double *out_8082777464406159763) {
  h_35(state, unused, out_8082777464406159763);
}
void live_H_35(double *state, double *unused, double *out_1914893457745328411) {
  H_35(state, unused, out_1914893457745328411);
}
void live_h_32(double *state, double *unused, double *out_3678648917755286173) {
  h_32(state, unused, out_3678648917755286173);
}
void live_H_32(double *state, double *unused, double *out_7716197829952940969) {
  H_32(state, unused, out_7716197829952940969);
}
void live_h_13(double *state, double *unused, double *out_2018478861536013333) {
  h_13(state, unused, out_2018478861536013333);
}
void live_H_13(double *state, double *unused, double *out_3066565144776721745) {
  H_13(state, unused, out_3066565144776721745);
}
void live_h_14(double *state, double *unused, double *out_6878791664417266905) {
  h_14(state, unused, out_6878791664417266905);
}
void live_H_14(double *state, double *unused, double *out_1210578952997688320) {
  H_14(state, unused, out_1210578952997688320);
}
void live_h_33(double *state, double *unused, double *out_5620049043069576208) {
  h_33(state, unused, out_5620049043069576208);
}
void live_H_33(double *state, double *unused, double *out_5065450462384186015) {
  H_33(state, unused, out_5065450462384186015);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
